#!/bin/bash

# ================================
# MACHINE SCRAPER: System Audit
# ================================

echo -e "\n================================="
echo -e "     MACHINE SCRAPER TOOL"
echo -e "=================================\n"

# ================================
# USER INFO
# ================================
echo -e "\n==============================="
echo -e "        USER INFO"
echo -e "===============================\n"
echo "[+] Username: $(whoami)"
echo "[+] Hostname: $(hostname)"
echo "[+] Current Directory: $(pwd)"
echo "[+] Home Directory: $HOME"
echo "[+] Shell: $SHELL"

# ================================
# OS INFO
# ================================
echo -e "\n==============================="
echo -e "         OS INFO"
echo -e "===============================\n"
uname -a
if [ -f /etc/os-release ]; then
    cat /etc/os-release
elif [ -f /System/Library/CoreServices/SystemVersion.plist ]; then
    sw_vers
fi

# ================================
# IP and MAC Address Info
# ================================
echo -e "\n==============================="
echo -e "     NETWORK IDENTIFIERS"
echo -e "===============================\n"
echo "[+] Internal IP:"
ipconfig getifaddr en0 2>/dev/null || hostname -I 2>/dev/null

echo "[+] External IP:"
curl -s ifconfig.me

echo "[+] MAC Address:"
ifconfig en0 2>/dev/null | awk '/ether/{print $2}' || ip link show | awk '/ether/ {print $2}'

# ================================
# Network Audit
# ================================
echo -e "\n==============================="
echo -e "   NETWORK AUDIT: OPEN PORTS"
echo -e "===============================\n"
if command -v netstat &> /dev/null; then
    echo "[+] Using netstat to show open ports:"
    netstat -tuln | grep LISTEN
elif command -v lsof &> /dev/null; then
    echo "[+] Using lsof to show open ports:"
    lsof -nP -iTCP -sTCP:LISTEN
elif command -v ss &> /dev/null; then
    echo "[+] Using ss to show open ports:"
    ss -tuln
else
    echo "[-] No compatible tool found to list open ports."
fi

echo -e "\n==============================="
echo -e "   ACTIVE NETWORK CONNECTIONS"
echo -e "===============================\n"
if command -v netstat &> /dev/null; then
    echo "[+] Using netstat to show active network connections:"
    netstat -tunap 2>/dev/null || netstat -tun 2>/dev/null
elif command -v lsof &> /dev/null; then
    echo "[+] Using lsof to show current network connections:"
    lsof -i -n -P
elif command -v ss &> /dev/null; then
    echo "[+] Using ss to show active network connections:"
    ss -tunap 2>/dev/null || ss -tun
else
    echo "[-] No compatible tool found to list active connections."
fi

# ================================
# CONNECTED WIFI NETWORKS (macOS)
# ================================
echo -e "\n==============================="
echo -e "     WIFI CONNECTIONS"
echo -e "===============================\n"
if [[ "$OSTYPE" == "darwin"* ]]; then
    security find-generic-password -D "AirPort network password" -a $(whoami) 2>/dev/null | grep 'acct' | awk -F '"' '{print $2}'
else
    nmcli connection show | grep wifi | awk '{print $1}'
fi

# ================================
# BROWSER HISTORY (Chrome, Brave, Safari, Tor, DuckDuckGo)
# ================================
echo -e "\n==============================="
echo -e "    BROWSER HISTORIES"
echo -e "===============================\n"

print_history() {
    local db_path="$1"
    local browser_name="$2"
    if [ -f "$db_path" ]; then
        echo "[+] $browser_name history:"
        sqlite3 "$db_path" "SELECT datetime(last_visit_time/1000000-11644473600,'unixepoch'), url FROM urls ORDER BY last_visit_time DESC LIMIT 10;" 2>/dev/null
    else
        echo "[-] $browser_name history DB not found."
    fi
}

# Google Chrome
print_history "$HOME/Library/Application Support/Google/Chrome/Default/History" "Google Chrome"

# Brave
print_history "$HOME/Library/Application Support/BraveSoftware/Brave-Browser/Default/History" "Brave"

# Safari
if [ -f "$HOME/Library/Safari/History.db" ]; then
    echo "[+] Safari history:"
    sqlite3 "$HOME/Library/Safari/History.db" "SELECT datetime(visit_time + 978307200, 'unixepoch'), url FROM history_visits INNER JOIN history_items ON history_items.id = history_visits.history_item ORDER BY visit_time DESC LIMIT 10;"
else
    echo "[-] Safari history DB not found."
fi

# Tor Browser
print_history "$HOME/Library/Application Support/TorBrowser-Data/Browser/profile.default/places.sqlite" "Tor"

# DuckDuckGo (if any)
echo "[-] DuckDuckGo browser history location unknown or not accessible."

# ================================
# INSTALLED SOFTWARE
# ================================
echo -e "\n==============================="
echo -e "   INSTALLED PROGRAMS"
echo -e "===============================\n"
if [[ "$OSTYPE" == "darwin"* ]]; then
    echo "[+] Using system_profiler to list apps:"
    system_profiler SPApplicationsDataType | grep -E "Location:|Version:|Name:" | paste - - -
else
    dpkg -l | grep '^ii'
fi

# ================================
# END
# ================================
echo -e "\n[+] Machine scraping complete."
exit 0

